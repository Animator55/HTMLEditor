.edit-screen {
    all: initial;
    cursor: inherit;
    display: flex;
    flex-direction: column;
    background-color: white;
    overflow: scroll;
    box-shadow: 0 9px 32px -6px var(--clight);
    position: fixed;
}


.edit-screen [draggable="true"]:hover{
    position: relative;
}
.edit-screen [draggable="true"]:hover::before{
    content: "";
    box-sizing: border-box;
    inset: 0;
    z-index: 2;
    position: absolute;
    border: 2px solid var(--cpurple);
    border-radius: 5px;
    pointer-events: none;
}

.edit-screen [draggable="true"]:has([draggable="true"]:hover):hover::before{
    display: none;
}

.edit-screen [draggable="true"][fixed="true"]:hover::before{
    border-color: var(--cpink);
}


.edit-screen [draggable="true"][fixed="true"] *, 
.edit-screen [draggable="true"][type="module"] > *{
    pointer-events: none;
}

.resize-zone {
    border: 2px solid var(--cpink);
    box-sizing: border-box;
    position: fixed;
    z-index: 1;
    border-radius: 5px;
    pointer-events: none;
}

.resize-point {
    background-color: var(--cpink);
    display: block;
    position: absolute;
    pointer-events: all;
    width: 1rem;
    height: 1rem;    
    z-index: 2;
    border-radius: 5px;
}

.resize-point.bottom {
    bottom: -0.5rem;
    left: calc(50% - 0.5rem);
    cursor: s-resize;
}

.resize-point.right {
    right: -0.5rem;
    top: calc(50% - 0.5rem);
    cursor: e-resize;
}

.resize-point:hover {
    background-color: var(--cpink);
}

.edit-screen::-webkit-scrollbar, .app-cont::-webkit-scrollbar {
    width: 0px;
    height: 0px;
}

.edit-screen > div {    
    min-height: 100%;
}

.edit-screen * {
    margin: 0;
    font-family: none;
}

h1, h2, h3, h4, h5, h6, p {
    color: inherit
}

.edit-screen a, .nav {
    display: flex;
}

.edit-screen .drop-place-adaptable {
    display: flex;
    position: relative;
}

.edit-screen .drop-place-adaptable:last-child {
    width: 100%;
}

.edit-screen > .drop-place-adaptable:last-child {
    height: auto;
}

@keyframes placeToInvi {
    from {background-color: #7cc0ff;}
    to {background-color: transparent;}
}

.placeInvisible {
    position: relative;
    background-color: #7cc0ff;
    animation-name: placeToInvi;
    animation-duration: 1s;
    animation-iteration-count: 1;
    animation-fill-mode: forwards;
}

.json-tree .placeInvisible {
    min-height: 3px;
}

.edit-screen .drop-place-adaptable > * {
    min-width: 10px;
    position: absolute;
    z-index: 1;
    width: 100%;
    height: 100%;
    min-height: 10px;
    opacity: 1;
}

.edit-screen .drop-place-adaptable > *:has(.render[select=true]) {
    position: relative;
}

[select=true]:not(.render),.render[select=true] > *{
    position: relative;
}

.render[select=true] > *{
    opacity: 0.5;
}


[select=true]:not(.render)::after, .render[select=true] > *::after{    
    content: "";
    box-sizing: border-box;
    inset: 0;
    position: absolute;
    background: repeating-linear-gradient(45deg, var(--cdeep), transparent 5%, var(--cdeep) 5%);
    background-size: 120% 100%;
    animation: selectAnimation 300ms linear infinite;
    opacity: 0.3;
    pointer-events: none;
}

.render[select=true] > *::after {
    opacity: 0.4;
}

.json-tree [select=true]{
    z-index: 0;
    box-shadow: 0 0px 2px var(--cpurple);
    position: relative;
    overflow: hidden;
}

.selectedClass {
    position: relative
}

.selectedClass::before{
    content: "";
    box-sizing: border-box;
    inset: 0;
    z-index: 2;
    position: absolute;
    background: #ff9634;
    opacity: 0.6;
    pointer-events: none;
}

/* [fixed="true"] {
    opacity: 0.5;
} IDEAAAAAAAAAAAAAAAAAAA*/ 

@keyframes selectAnimation {
    0%{background-position:50% 50%}
    100%{background-position:89% 50%}
}

.dragging {
    opacity: 0.3;
    box-shadow: 0 0px 30px 0px var(--cblack);
}